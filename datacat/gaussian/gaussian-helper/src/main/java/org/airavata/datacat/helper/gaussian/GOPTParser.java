//----------------------------------------------------
// The following code was generated by CUP v0.10k TUM Edition 20050516
// Wed Feb 08 14:13:50 CST 2006
//----------------------------------------------------

package org.airavata.datacat.helper.gaussian;

import java.io.IOException;
import java.util.Stack;

/**
 * CUP v0.10k TUM Edition 20050516 generated parser.
 *
 * @version Wed Feb 08 14:13:50 CST 2006
 */
public class GOPTParser extends java_cup.runtime.lr_parser {

    /**
     * Default constructor.
     */
    public GOPTParser() {
        super();
    }

    /**
     * Constructor which sets the default scanner.
     */
    public GOPTParser(java_cup.runtime.Scanner s) {
        super(s);
    }

    /**
     * Production table.
     */
    protected static final short _production_table[][] =
            unpackFromStrings(new String[]{
                    "\000\014\000\002\003\005\000\002\002\004\000\002\004" +
                            "\003\000\002\005\004\000\002\005\003\000\002\006\004" +
                            "\000\002\006\003\000\002\007\004\000\002\007\003\000" +
                            "\002\007\003\000\002\010\004\000\002\011\004"});

    /**
     * Access to production table.
     */
    public short[][] production_table() {
        return _production_table;
    }

    /**
     * Parse-action table.
     */
    protected static final short[][] _action_table =
            unpackFromStrings(new String[]{
                    "\000\024\000\004\004\005\001\002\000\012\006\016\007" +
                            "\011\010\012\011\010\001\002\000\012\006\uffff\007\uffff" +
                            "\010\uffff\011\uffff\001\002\000\004\002\007\001\002\000" +
                            "\004\002\000\001\002\000\004\015\026\001\002\000\004" +
                            "\013\025\001\002\000\004\014\024\001\002\000\014\005" +
                            "\ufffb\006\ufffb\007\ufffb\010\ufffb\011\ufffb\001\002\000\014" +
                            "\005\ufff8\006\ufff8\007\ufff8\010\ufff8\011\ufff8\001\002\000" +
                            "\014\005\ufff9\006\ufff9\007\ufff9\010\ufff9\011\ufff9\001\002" +
                            "\000\004\012\023\001\002\000\014\005\022\006\016\007" +
                            "\011\010\012\011\010\001\002\000\014\005\ufffd\006\ufffd" +
                            "\007\ufffd\010\ufffd\011\ufffd\001\002\000\014\005\ufffe\006" +
                            "\ufffe\007\ufffe\010\ufffe\011\ufffe\001\002\000\004\002\001" +
                            "\001\002\000\014\005\ufffa\006\ufffa\007\ufffa\010\ufffa\011" +
                            "\ufffa\001\002\000\014\005\ufff7\006\ufff7\007\ufff7\010\ufff7" +
                            "\011\ufff7\001\002\000\014\005\ufffc\006\ufffc\007\ufffc\010" +
                            "\ufffc\011\ufffc\001\002\000\014\005\ufff6\006\ufff6\007\ufff6" +
                            "\010\ufff6\011\ufff6\001\002"});

    /**
     * Access to parse-action table.
     */
    public short[][] action_table() {
        return _action_table;
    }

    /**
     * <code>reduce_goto</code> table.
     */
    protected static final short[][] _reduce_table =
            unpackFromStrings(new String[]{
                    "\000\024\000\006\003\005\004\003\001\001\000\014\005" +
                            "\016\006\017\007\012\010\014\011\013\001\001\000\002" +
                            "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
                            "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
                            "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
                            "\012\006\020\007\012\010\014\011\013\001\001\000\002" +
                            "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
                            "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
                            ""});

    /**
     * Access to <code>reduce_goto</code> table.
     */
    public short[][] reduce_table() {
        return _reduce_table;
    }

    /**
     * Instance of action encapsulation class.
     */
    protected CUP$GOPTParser$actions action_obj;

    /**
     * Action encapsulation object initializer.
     */
    public void init_actions() throws IOException {
        action_obj = new CUP$GOPTParser$actions(this);
    }

    /**
     * Invoke a user supplied parse action.
     */
    public java_cup.runtime.Symbol do_action(
            int act_num,
            java_cup.runtime.lr_parser parser,
            Stack stack,
            int top)
            throws Exception {
        /* call code in generated class */
        return action_obj.CUP$GOPTParser$do_action(act_num, parser, stack, top);
    }

    /**
     * Indicates start state.
     */
    public int start_state() {
        return 0;
    }

    /**
     * Indicates start production.
     */
    public int start_production() {
        return 1;
    }

    /**
     * <code>EOF</code> Symbol index.
     */
    public int EOF_sym() {
        return 0;
    }

    /**
     * <code>error</code> Symbol index.
     */
    public int error_sym() {
        return 1;
    }
}